{
	"info": {
		"_postman_id": "e205661c-1e94-45e5-be0b-cb8ae347b059",
		"name": "RandomUser",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33348797"
	},
	"item": [
		{
			"name": "Get RandomUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"pm.test(\"Results array exists and is not empty\", function () {\r",
							"    pm.expect(jsonData.results).to.be.an('array').that.is.not.empty;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://randomuser.me/api/",
					"protocol": "https",
					"host": [
						"randomuser",
						"me"
					],
					"path": [
						"api",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get multiple users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"The response contains exactly 5 user results\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.results).to.be.an('array').that.has.lengthOf(5);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}?results=5",
					"host": [
						"{{url}}"
					],
					"query": [
						{
							"key": "results",
							"value": "5"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user by gender",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"female\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}?gender=female",
					"host": [
						"{{url}}"
					],
					"query": [
						{
							"key": "gender",
							"value": "female"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create new user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"John Doe\",\r\n  \"username\": \"johndoe\",\r\n  \"email\": \"john.doe@example.com\",\r\n  \"address\": {\r\n    \"street\": \"123 Main St\",\r\n    \"city\": \"New York\",\r\n    \"zipcode\": \"10001\"\r\n  },\r\n  \"phone\": \"123-456-7890\",\r\n  \"website\": \"http://johndoe.com\",\r\n  \"company\": {\r\n    \"name\": \"Doe Enterprises\"\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/users",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "update user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify specific updated values\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"\r",
							"    pm.expect(jsonData.name).to.eql(\"John Doe Updated\");\r",
							"    pm.expect(jsonData.username).to.eql(\"john.doe.updated\");\r",
							"    pm.expect(jsonData.email).to.eql(\"john.doe.updated@example.com\");\r",
							"    pm.expect(jsonData.address.street).to.eql(\"456 Main St\");\r",
							"    pm.expect(jsonData.address.city).to.eql(\"New York\");\r",
							"    pm.expect(jsonData.address.zipcode).to.eql(\"10002\");\r",
							"    pm.expect(jsonData.phone).to.eql(\"987-654-3210\");\r",
							"    pm.expect(jsonData.website).to.eql(\"http://johndoeupdated.com\");\r",
							"    pm.expect(jsonData.company.name).to.eql(\"Doe Enterprises Updated\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"John Doe Updated\",\r\n  \"username\": \"john.doe.updated\",\r\n  \"email\": \"john.doe.updated@example.com\",\r\n  \"address\": {\r\n    \"street\": \"456 Main St\",\r\n    \"city\": \"New York\",\r\n    \"zipcode\": \"10002\"\r\n  },\r\n  \"phone\": \"987-654-3210\",\r\n  \"website\": \"http://johndoeupdated.com\",\r\n  \"company\": {\r\n    \"name\": \"Doe Enterprises Updated\"\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/users/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "update partial user's infos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify updated email and phone fields\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"\r",
							"    pm.expect(jsonData.email).to.eql(\"john.new.email@example.com\");\r",
							"    pm.expect(jsonData.phone).to.eql(\"111-222-3333\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"john.new.email@example.com\",\r\n  \"phone\": \"111-222-3333\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/users/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response is empty\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"\r",
							"    pm.expect(jsonData).to.eql({});\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/users/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users",
						"1"
					]
				}
			},
			"response": []
		}
	]
}